/*
 * Copyright 2021 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(interleaved_short_to_complex.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(85290bcc03c2cca82cfe4074d0135fad)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <sandia_utils/interleaved_short_to_complex.h>
// pydoc.h is automatically generated in the build directory
#include <interleaved_short_to_complex_pydoc.h>

void bind_interleaved_short_to_complex(py::module& m)
{

    using interleaved_short_to_complex    = ::gr::sandia_utils::interleaved_short_to_complex;


    py::class_<interleaved_short_to_complex, gr::sync_decimator,
        std::shared_ptr<interleaved_short_to_complex>>(m, "interleaved_short_to_complex", D(interleaved_short_to_complex))

        .def(py::init(&interleaved_short_to_complex::make),
           py::arg("vector_input") = false,
           py::arg("swap") = false,
           py::arg("scale") = 1.,
           D(interleaved_short_to_complex,make)
        )
        




        
        .def("set_swap",&interleaved_short_to_complex::set_swap,       
            py::arg("swap"),
            D(interleaved_short_to_complex,set_swap)
        )


        
        .def("set_scale",&interleaved_short_to_complex::set_scale,       
            py::arg("scale"),
            D(interleaved_short_to_complex,set_scale)
        )

        ;




}








