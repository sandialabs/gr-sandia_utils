/*
 * Copyright 2021 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(block_buffer.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(0d1f871ab6a28e9fb16d845fae4b4e48)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <sandia_utils/block_buffer.h>
// pydoc.h is automatically generated in the build directory
#include <block_buffer_pydoc.h>

void bind_block_buffer(py::module& m)
{

    using block_buffer    = ::gr::sandia_utils::block_buffer;


    py::class_<block_buffer, gr::block, gr::basic_block,
        std::shared_ptr<block_buffer>>(m, "block_buffer", D(block_buffer))

        .def(py::init(&block_buffer::make),
           py::arg("itemsize"),
           py::arg("nsamples"),
           py::arg("samp_rate"),
           py::arg("pass_data") = true,
           D(block_buffer,make)
        )
        




        
        .def("set_nsamples",&block_buffer::set_nsamples,       
            py::arg("nsamples"),
            D(block_buffer,set_nsamples)
        )


        
        .def("set_pass_data",&block_buffer::set_pass_data,       
            py::arg("pass_data"),
            D(block_buffer,set_pass_data)
        )


        
        .def("get_pass_data",&block_buffer::get_pass_data,       
            D(block_buffer,get_pass_data)
        )

        ;




}








